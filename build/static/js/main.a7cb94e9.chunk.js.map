{"version":3,"sources":["context/CartContext.js","components/CartWidget.js","components/NavBar.jsx","Firebase/firebase.js","components/Item.js","components/ItemList.js","container/ItemListContainer.jsx","components/ItemCount.js","components/ItemDetail.js","container/ItemDetailContainer.jsx","components/CartItem.js","components/ItemCartList.js","container/Cart.jsx","App.js","reportWebVitals.js","index.js"],"names":["CartContext","createContext","useCartContext","useContext","CartContextProvider","children","useState","cartList","setCartList","removeItem","itemId","isInCart","alert","itemIndex","findIndex","item","id","splice","map","includes","Provider","value","addItem","quantity","clear","itemCount","cont","forEach","element","editItemQuantity","newList","totalPrice","price","p","position","color","top","right","CartWidget","style","xmlns","width","height","fill","className","viewBox","d","NavBar","active","setActive","to","Navbar","Brand","href","onClick","Nav","Link","fb","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","getFirestore","Item","title","src","pictureUrl","alt","ItemList","items","ItemListContainer","products","setProducts","loading","setLoading","useParams","useEffect","collection","get","then","querySnapshot","docs","doc","data","filter","producto","category","catch","error","console","log","finally","ItemCount","onCustomPress","count","setCount","ItemDetail","addPressed","setAddPressed","Row","Col","description","Button","ItemDetailContainer","itemDetailResq","setItemDetailResq","where","length","CartItem","Cart","idOrder","setIdOrder","name","Phone","Email","validateEmail","datos","setForm","handlerChange","e","preventDefault","target","ItemCartList","type","placeholder","onChange","orden","date","Timestamp","fromDate","Date","buyer","nombre","email","tel","total","cartItem","precio","add","resp","generarOrden","App","flexWrap","with","minHeight","alignItem","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7cb94e9.chunk.js","sourcesContent":["import { useState, createContext, useContext } from \"react\";\r\nconst CartContext = createContext([]);\r\n\r\nexport const useCartContext = () => useContext(CartContext);\r\n\r\nfunction CartContextProvider({ children }) {\r\n  const [cartList, setCartList] = useState([]);\r\n\r\n  // Métodos recomendados:\r\n  // addItem(item, quantity) // agregar cierta cantidad de un ítem al carrito\r\n  // removeItem(itemId) // Remover un item del cart por usando su id\r\n  // clear() // Remover todos los items\r\n  // isInCart: (id) => true|false\r\n\r\n  const addItem = (item, quantity) => {\r\n    if (!isInCart(item.id)) {\r\n      setCartList([...cartList, { item: item, quantity: quantity }]);\r\n    }\r\n  };\r\n\r\n  const editItemQuantity = (id, quantity) => {\r\n    if (quantity > 0) {\r\n      let itemIndex = cartList.findIndex((item) => item.item.id === id);\r\n      let newList = cartList;\r\n      newList[itemIndex].quantity = quantity;\r\n      setCartList([...newList]);\r\n    } else removeItem(id);\r\n  };\r\n\r\n  const removeItem = (itemId) => {\r\n    if (isInCart(itemId)) {\r\n      alert(\"¿Eliminar item del carrito?\");\r\n      let itemIndex = cartList.findIndex((item) => item.item.id === itemId);\r\n      cartList.splice(itemIndex, 1);\r\n      setCartList([...cartList]);\r\n    }\r\n  };\r\n\r\n  const clear = () => {\r\n    setCartList([]);\r\n  };\r\n\r\n  const isInCart = (id) => {\r\n    return cartList.map((item) => item.item.id).includes(id);\r\n  };\r\n\r\n  const itemCount = () => {\r\n    let cont = 0;\r\n    cartList.forEach((element) => {\r\n      cont += element.quantity;\r\n    });\r\n\r\n    return cont;\r\n  };\r\n\r\n  const totalPrice = () => {\r\n    let cont = 0;\r\n    cartList.forEach((element) => {\r\n      cont += element.item.price * element.quantity;\r\n    });\r\n\r\n    return cont;\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{\r\n        cartList,\r\n        addItem,\r\n        removeItem,\r\n        clear,\r\n        isInCart,\r\n        itemCount,\r\n        editItemQuantity,\r\n        totalPrice,\r\n      }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n\r\nexport default CartContextProvider;\r\n","import React from \"react\";\r\nimport { useCartContext } from \"../context/CartContext\";\r\n\r\nconst p = { position: \"absolute\", color: \"white\", top: 2, right: 10 };\r\n\r\nconst CartWidget = () => {\r\n  const { itemCount } = useCartContext();\r\n  return (\r\n    <div>\r\n      {itemCount() > 0 && <p style={p}>{itemCount()}</p>}\r\n\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"16\"\r\n        height=\"16\"\r\n        fill=\"currentColor\"\r\n        className=\"bi bi-cart\"\r\n        viewBox=\"0 0 16 16\"\r\n      >\r\n        <path d=\"M0 1.5A.5.5 0 0 1 .5 1H2a.5.5 0 0 1 .485.379L2.89 3H14.5a.5.5 0 0 1 .491.592l-1.5 8A.5.5 0 0 1 13 12H4a.5.5 0 0 1-.491-.408L2.01 3.607 1.61 2H.5a.5.5 0 0 1-.5-.5zM3.102 4l1.313 7h8.17l1.313-7H3.102zM5 12a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm7 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4zm-7 1a1 1 0 1 1 0 2 1 1 0 0 1 0-2zm7 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\" />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartWidget;\r\n","import { useState } from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport CartWidget from \"./CartWidget\";\r\nimport { useCartContext } from \"../context/CartContext\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst NavBar = () => {\r\n  const [active, setActive] = useState(0);\r\n  const { itemCount } = useCartContext();\r\n  return (\r\n    <nav className=\"navbar navbar-inverse\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"navbar-header\">\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand href=\"#\" to=\"/\">\r\n              Gastronomia PH\r\n            </Navbar.Brand>\r\n          </LinkContainer>\r\n        </div>\r\n        <ul className=\"nav navbar-nav\">\r\n          <li\r\n            onClick={() => setActive(1)}\r\n            className={active === 1 ? \"active\" : \"\"}\r\n          >\r\n            <LinkContainer to=\"/category/estaca\">\r\n              <Nav.Link to=\"category/estaca\">Estaca</Nav.Link>\r\n            </LinkContainer>\r\n          </li>\r\n          <li\r\n            onClick={() => setActive(2)}\r\n            className={active === 2 ? \"active\" : \"\"}\r\n          >\r\n            <LinkContainer to=\"/category/parrilla\">\r\n              <Nav.Link to=\"category/parrilla\">Parrilla</Nav.Link>\r\n            </LinkContainer>\r\n          </li>\r\n          <li\r\n            onClick={() => setActive(3)}\r\n            className={active === 3 ? \"active\" : \"\"}\r\n          >\r\n            <LinkContainer to=\"/category/gourmet\">\r\n              <Nav.Link to=\"category/gourmet\">Gourmet</Nav.Link>\r\n            </LinkContainer>\r\n          </li>\r\n        </ul>\r\n        {itemCount() > 0 && (\r\n          <ul className=\"nav navbar-nav navbar-right\">\r\n            <li>\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link to=\"/cart\">\r\n                  <CartWidget />\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n            </li>\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","// Import the functions you need from the SDKs you need\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD6o8BOXKjxgHH5cDt82MKTS_6e0-aK9ww\",\r\n  authDomain: \"coderhouse-ph.firebaseapp.com\",\r\n  projectId: \"coderhouse-ph\",\r\n  storageBucket: \"coderhouse-ph.appspot.com\",\r\n  messagingSenderId: \"747051918732\",\r\n  appId: \"1:747051918732:web:0002cc1d270c89a21422a9\",\r\n  measurementId: \"G-1NQSJE7GBV\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst fb = firebase.initializeApp(firebaseConfig);\r\n\r\nexport const dataBase = fb.firestore();\r\n\r\nexport function getFirestore() {\r\n  return firebase.firestore(fb);\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Item({ item }) {\r\n  // Desarrolla la vista de un ítem donde item es de tipo { id, title, price, pictureUrl } podes agregar más propiedades si queres!\r\n  return (\r\n    <div key={item.id} className=\"card w-50 mt-5 gridColumn\">\r\n      <div className=\"card-header\">{item.title}</div>\r\n      <div className=\"card-body\">\r\n        <img src={item.pictureUrl} width={250} height={250} alt=\"pictureUrl\" />\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <label>{item.price}</label>\r\n      </div>\r\n      <div className=\"card-footer\">\r\n        <Link to={`/item/${item.id}`}>\r\n          <button className=\"btn btn-outline-secondary btn-block gridColumnButton\">\r\n            Detalle\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport Item from \"./Item\";\r\n\r\nfunction ItemList({ items }) {\r\n  // Desarrolla la vista utilizando un array de items y un map\r\n  return items.map((item) => <Item key={item.id} item={item} />);\r\n}\r\n\r\nexport default ItemList;\r\n","import { getFirestore } from \"../Firebase/firebase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport ItemList from \"../components/ItemList\";\r\n\r\nfunction ItemListContainer() {\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const db = getFirestore();\r\n    const itemCollection = db.collection(\"productos\");\r\n\r\n    itemCollection\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        if (id) {\r\n          setProducts(\r\n            querySnapshot.docs\r\n              .map((doc) => doc.data())\r\n              .filter((producto) => producto.category === id)\r\n          );\r\n        } else {\r\n          setProducts(querySnapshot.docs.map((doc) => doc.data()));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error searching products\", error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <h1>Cargando...</h1>\r\n      ) : (\r\n        <div\r\n          className=\"ItemListContainer\"\r\n        >\r\n          <ItemList items={products} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ItemListContainer;\r\n","import { useState } from \"react\";\r\nimport { useCartContext } from \"../context/CartContext\";\r\n\r\nconst ItemCount = ({ item, onCustomPress }) => {\r\n  const [count, setCount] = useState(0);\r\n  const { addItem } = useCartContext();\r\n\r\n  const sumarContador = () => {\r\n    if (count < 5) {\r\n      setCount(count + 1);\r\n    } else {\r\n      alert(\"La cantidad supera el stock disponible\");\r\n    }\r\n  };\r\n\r\n  const restarContador = () => {\r\n    if (count > 0) {\r\n      setCount(count - 1);\r\n    }\r\n  };\r\n\r\n  const agregarCarrito = () => {\r\n    setCount(count);\r\n    addItem(item, count);\r\n    onCustomPress();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={sumarContador}>+</button>\r\n      <p>{count}</p>\r\n      <button onClick={restarContador}>-</button>\r\n      {count !== 0 && (\r\n        <div>\r\n          <button onClick={() => agregarCarrito()}>Agregar Carrito</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemCount;\r\n","import Button from \"@restart/ui/esm/Button\";\r\nimport { useState } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ItemCount from \"./ItemCount\";\r\n\r\n// ItemDetail.js, que debe mostrar la vista de detalle de un ítem incluyendo su descripción, una foto y el precio.\r\nconst ItemDetail = ({ item }) => {\r\n  const [addPressed, setAddPressed] = useState(false);\r\n\r\n  const onAdd = () => {\r\n    setAddPressed(true);\r\n  };\r\n\r\n  // Desarrolla la vista de detalle expandida del producto con su imagen título, descripción y precio\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <div className=\"card w-50\">\r\n          <div className=\"container\">\r\n            <label>{item.title}</label>\r\n          </div>\r\n          <div className=\"container\">\r\n            {item.pictureUrl && (\r\n              <img\r\n                src={item.pictureUrl}\r\n                width={400}\r\n                height={400}\r\n                alt=\"pictureUrl\"\r\n              />\r\n            )}\r\n            <br />\r\n            <label>{item.description}</label>\r\n          </div>\r\n          <div className=\"container\">\r\n            <label>{item.price}</label>\r\n          </div>\r\n        </div>\r\n      </Col>\r\n      <Col>\r\n        {/* Oculto hasta que el usuario seleccione la cantidad y clickee en comprar */}\r\n        {!addPressed ? (\r\n          <div>\r\n            <ItemCount onCustomPress={() => onAdd()} item={item} />\r\n          </div>\r\n        ) : (\r\n          <Link to={`/cart`}>\r\n            <Button>Termina tu compra</Button>\r\n          </Link>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ItemDetail;\r\n","import { getFirestore } from \"../Firebase/firebase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport ItemDetail from \"../components/ItemDetail\";\r\n\r\nfunction ItemDetailContainer() {\r\n  const [itemDetailResq, setItemDetailResq] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    const db = getFirestore();\r\n    const itemCollection = db.collection(\"productos\");\r\n\r\n    itemCollection\r\n      .where('id', '==' , id)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        if (id) {\r\n          setItemDetailResq(querySnapshot.docs.map((doc) => doc.data())[0]);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error searching products\", error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }, [id]);\r\n\r\n  return (\r\n    <>{loading ? <p>Cargando...</p> : <ItemDetail item={itemDetailResq} />}</>\r\n  );\r\n}\r\n\r\nexport default ItemDetailContainer;\r\n","import React from \"react\";\r\nimport { useCartContext } from \"../context/CartContext\";\r\n\r\nfunction Item({ item }) {\r\n  const { editItemQuantity } = useCartContext();\r\n  // Desarrolla la vista de un ítem donde item es de tipo { id, title, price, pictureUrl } podes agregar más propiedades si queres!\r\n  return (\r\n    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n      {item.item.title}\r\n      <span\r\n        onClick={() => {\r\n          editItemQuantity(item.item.id, 0);\r\n        }}\r\n        className=\"badge badge-primary badge-pill\"\r\n      >\r\n        Eliminar item\r\n      </span>\r\n      <span\r\n        onClick={() => {\r\n          editItemQuantity(item.item.id, item.quantity + 1);\r\n        }}\r\n        className=\"badge badge-primary badge-pill\"\r\n      >\r\n        +\r\n      </span>\r\n      <span className=\"badge badge-pill\">{item.quantity}</span>\r\n      <span\r\n        onClick={() => {\r\n          editItemQuantity(item.item.id, item.quantity - 1);\r\n        }}\r\n        className=\"badge badge-primary badge-pill\"\r\n      >\r\n        -\r\n      </span>\r\n      <span className=\"badge badge-primary badge-pill\">\r\n        {item.item.price * item.quantity}\r\n      </span>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport CartItem from \"./CartItem\";\r\nimport { useCartContext } from \"../context/CartContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@restart/ui/esm/Button\";\r\n\r\nfunction ItemList({ items }) {\r\n  // Desarrolla la vista utilizando un array de items y un map\r\n  const { totalPrice } = useCartContext();\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.length > 0 ? (\r\n        items.map((item) => <CartItem key={item.item.id} item={item} />)\r\n      ) : (\r\n        <>\r\n          <p>Sin items en la lista</p>\r\n          <Link to={`/`}>\r\n            <Button>Go home</Button>\r\n          </Link>\r\n        </>\r\n      )}\r\n      {items.length > 0 && (\r\n        <label className=\"mt-5\">TOTAL: {totalPrice()}</label>\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ItemList;\r\n","import { useCartContext } from \"../context/CartContext\";\r\nimport ItemCartList from \"../components/ItemCartList\";\r\nimport firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport { getFirestore } from \"../Firebase/firebase\";\r\nimport { useState } from \"react\";\r\n\r\nconst Cart = () => {\r\n  const [idOrder, setIdOrder] = useState(\"\");\r\n  const [datos, setForm] = useState({\r\n    name: \"\",\r\n    Phone: \"\",\r\n    Email: \"\",\r\n    validateEmail: \"\",\r\n  });\r\n\r\n  const handlerChange = (e) => {\r\n    e.preventDefault();\r\n    setForm({ ...datos, ...{ [e.target.name]: e.target.value } });\r\n  };\r\n\r\n  const { cartList, totalPrice, clear } = useCartContext();\r\n\r\n  const generarOrden = () => {\r\n    const orden = {};\r\n    orden.date = firebase.firestore.Timestamp.fromDate(new Date());\r\n    orden.buyer = {\r\n      nombre: datos.name,\r\n      email: datos.Email,\r\n      tel: datos.Phone,\r\n    };\r\n    orden.total = totalPrice();\r\n    orden.items = cartList.map((cartItem) => {\r\n      const id = cartItem.item.id;\r\n      const nombre = cartItem.item.title;\r\n      const precio = cartItem.item.price;\r\n\r\n      return { id, nombre, precio };\r\n    });\r\n\r\n    // Agregar un elemento a una coleccion\r\n    const db = getFirestore();\r\n    db.collection(\"orders\")\r\n      .add(orden)\r\n      .then((resp) => {\r\n        setIdOrder(resp.id);\r\n      });\r\n\r\n    clear();\r\n  };\r\n\r\n  return (\r\n    <div\r\n     className=\"CartMain\"\r\n    >\r\n      <h1>Carrito</h1>\r\n\r\n      <section>\r\n        {idOrder !== \"\" && <label>El id de su orden es: {idOrder}</label>}\r\n      </section>\r\n      {cartList.length > 0 && <button onClick={() => clear()}>Borrar Carrito</button>}\r\n      <ItemCartList items={cartList} />\r\n\r\n      {cartList.length > 0 && idOrder === \"\" && (\r\n        <>\r\n          <form className=\"form\">\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-2 col-form-label\">Name</label>\r\n              <div className=\"col-sm-10\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Nombre\"\r\n                  value={datos.name}\r\n                  onChange={handlerChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-2 col-form-label\">Phone</label>\r\n              <div className=\"col-sm-10\">\r\n                <input\r\n                  className=\"form-control\"\r\n                  type=\"number\"\r\n                  name=\"Phone\"\r\n                  placeholder=\"Telefono\"\r\n                  value={datos.Phone}\r\n                  onChange={handlerChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-2 col-form-label\">Email</label>\r\n              <div className=\"col-sm-10\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"inputEmail3\"\r\n                  placeholder=\"Email\"\r\n                  name=\"Email\"\r\n                  value={datos.Email}\r\n                  onChange={handlerChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-2 col-form-label\">validate-Email</label>\r\n              <div className=\"col-sm-10\">\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"inputEmail3\"\r\n                  name=\"validateEmail\"\r\n                  placeholder=\"Confirmar Email\"\r\n                  value={datos.validateEmail}\r\n                  onChange={handlerChange}\r\n                />\r\n              </div>\r\n            </div>\r\n            <button\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                if (\r\n                  datos.Email === datos.validateEmail &&\r\n                  datos.validateEmail !== \"\"\r\n                ) {\r\n                  generarOrden();\r\n                }\r\n              }}\r\n            >\r\n              Enviar Orden\r\n            </button>\r\n          </form>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import \"./App.css\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport ItemListContainer from \"./container/ItemListContainer\";\r\nimport ItemDetailContainer from \"./container/ItemDetailContainer\";\r\nimport Cart from \"./container/Cart\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport CartContextProvider from \"./context/CartContext\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\" border border-3 border-primary\">\r\n      <center\r\n        style={{\r\n          flexWrap: \"wrap\",\r\n          with: \"100%\",\r\n          minHeight: \"100%\",\r\n          alignItem: \"center\",\r\n        }}\r\n      >\r\n        <CartContextProvider>\r\n          <BrowserRouter>\r\n            <NavBar />\r\n            <Routes>\r\n              <Route exact path=\"/\" element={<ItemListContainer />} />\r\n              <Route\r\n                exact\r\n                path=\"/category/:id\"\r\n                element={<ItemListContainer />}\r\n              />\r\n              <Route path=\"/item/:id\" element={<ItemDetailContainer />} />\r\n              <Route path=\"/cart\" element={<Cart />} />\r\n            </Routes>\r\n          </BrowserRouter>\r\n        </CartContextProvider>\r\n      </center>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './Firebase/firebase'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}